- name: copying policies
  copy:
    src: policies/
    dest: /root/policies/
    owner: root
    group: root
    mode: 0644

- name: check for an account
  command: /usr/bin/euare-accountgetsummary 
    --as-account {{ account | quote }}
  ignore_errors: true
  changed_when: false
  register: account_summary

- name: create an account
  shell: /usr/bin/euare-accountcreate 
    --account {{ account | quote }} 
    --write-config >{{ inifile_admin | quote }}
  when: account_summary.rc != 0

- name: obtain region name from euca2ools config
  slurp:
    path: "{{ inifile_admin }}"
  register: admin_info

- name: parse the endpoints and credentials for ATS installation
  set_fact:
    region_name: "{{ admin_info['content'] | b64decode | regex_findall('\\[region (.+)\\]') | first }}"

- name: discover account number
  shell: >
    /usr/bin/euare-userlistbypath 
    --as-account {{ account | quote }} 
    | grep user/admin
  changed_when: false
  register: admin_userpath

- set_fact:
    account_number: "{{ admin_userpath.stdout |
      regex_replace('arn:aws:iam::(\\d+):user/admin', '\\1') }}"

- set_fact:
    region_arg: "{{account_number}}:admin@{{region_name}}" # switches profile to admin@poc account

- name: check for SSH key for admin
  command: /usr/bin/euca-describe-keypairs
    --region {{ region_arg | quote }}
    {{ keyname_admin | quote }}
  ignore_errors: true
  changed_when: false
  register: admin_keysig

- name: create an SSH key for admin 
  command: /usr/bin/euca-create-keypair
    --region {{ region_arg | quote }}
    --filename {{ keyfile_admin | quote }}
    {{ keyname_admin | quote }}
  when: admin_keysig.rc != 0

- name: check for group
  command: /usr/bin/euare-grouplistusers
    --as-account {{ account | quote }}
    {{ group|quote }}
  ignore_errors: true
  changed_when: false
  register: group_users

- name: create a group
  command: /usr/bin/euare-groupcreate
    --as-account {{ account | quote }}
    {{ group|quote }}
  when: group_users.rc != 0

- name: add a policy
  command: /usr/bin/euare-groupuploadpolicy
    --as-account {{ account | quote }}
    {{ group|quote }}
    --policy-name PowerUserAccess
    --policy-document /root/policies/PowerUserAccess.json
  when: group_users.rc != 0

- name: authorize SSH to default security group
  command: /usr/bin/euca-authorize
    --region {{ region_arg | quote }}
    -P tcp -p 22 -s 0.0.0.0/0 default

- name: authorize ping to default security group
  command: /usr/bin/euca-authorize
    --region {{ region_arg | quote }}
    -P icmp -t -1:-1 -s 0.0.0.0/0 default

- name: check for login profile for admin
  command: /usr/bin/euare-usergetloginprofile
    --as-account {{ account | quote }}
    admin
  ignore_errors: true
  changed_when: false
  register: admin_profile

- set_fact:
    admin_console_password: "{{ gen_password }}"
  when: admin_profile.rc != 0

- set_fact:
    admin_console_password: "{{ eucaconsole_admin_password }}"
  when: eucaconsole_admin_password != ""

- name: create login profile for admin
  command: /usr/bin/euare-useraddloginprofile
    --as-account {{ account | quote }}
    --password {{ admin_console_password | quote }}
    admin
  when: admin_profile.rc != 0

- name: update login profile for admin
  command: /usr/bin/euare-usermodloginprofile
    --as-account {{ account | quote }}
    --password {{ admin_console_password | quote }}
    admin
  when: admin_profile.rc == 0 and admin_console_password is defined

- name: create a user
  shell: /usr/bin/euare-usercreate
    --as-account {{ account | quote }}
    {{ user | quote }}
    --group-name {{ group | quote }}
    --write-config >{{ inifile_user | quote }}
  args:
    creates: "{{ inifile_user }}"