---
- import_tasks: account.yml

- name: check for instance-store EMIs
  command: /usr/bin/euca-describe-images --all --filter root-device-type=instance-store --filter tag:type=ats-sample-image
  changed_when: false
  register: is_images

- import_tasks: image-is.yml
  when: is_images.stdout == ""

- name: check for EBS EMIs
  command: /usr/bin/euca-describe-images --all --filter root-device-type=ebs --filter tag:type=ats-sample-image
  changed_when: false
  register: ebs_images

# TODO: install an EBS image

- name: obtain account admin creds and endpoints from euca2ools config
  slurp:
    path: "{{ inifile_admin }}"
  register: admin_info
  
- name: parse the endpoints and credentials for ATS installation
  set_fact:
    ats_key_id:     "{{ admin_info['content'] | b64decode | regex_findall('key-id = (.+)')     | first }}"
    ats_secret_key: "{{ admin_info['content'] | b64decode | regex_findall('secret-key = (.+)') | first }}"
    ats_ec2_url:    "{{ admin_info['content'] | b64decode | regex_findall('ec2-url = (.+)')    | first }}"
    ats_iam_url:    "{{ admin_info['content'] | b64decode | regex_findall('iam-url = (.+)')    | first }}"
    ats_s3_url:     "{{ admin_info['content'] | b64decode | regex_findall('s3-url = (.+)')     | first }}"

- debug:
    msg:
    - "Key: {{ ats_key_id }}"
    - "EC2 endpoint: {{ ats_ec2_url }}"
    - "IAM endpoint: {{ ats_iam_url }}"
    - "S3 endpoint:  {{ ats_s3_url }}"